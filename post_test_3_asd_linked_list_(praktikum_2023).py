# -*- coding: utf-8 -*-
"""Post Test 3 ASD Linked List (Praktikum 2023).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lzzgyjZ-W18_mx1w2PHPeJNs_GLkmfdS
"""

import os
 
class Node(object):
    def __init__(self, data=None, nextnode=None):
        self.data = data
        self.nextnode = nextnode
   
    def getdata(self):
        return self.data
   
    def getnext(self):
        return self.nextnode
   
    def setnext(self, newnext):
        self.nextnode = newnext
       
class LinkedList(object):
    def __init__(self, head=None):
        self.head = head

    def tambahdata(self, data):
        newnode = Node(data)
        newnode.setnext(self.head)
        self.head = newnode
 
    def banyakdata(self):
        current = self.head
        byk = 0
        while current:
            byk += 1
            current = current.getnext()
        return byk

    def caridata(self, data):
        current = self.head
        dapat = False
        while current and dapat is False:
            if current.getdata() == data:
                dapat = True
            else:
                current = current.getnext()              
        return dapat
 
    def hapusdata(self, data):
        current = self.head
        prev = None
        dapat = False
        while current and dapat is False:
            if current.getdata() == data:
                dapat= True
            else:
                prev = current
                current = current.getnext()
        if current is None:
            raise ValueError("Data tidak ada")
        if prev is None:
            self.head = current.getnext()
        else:
            prev.setnext(current.getnext())
 
    def tampildata(self):
        os.system('cls')
        print(20*"=")
        print ("Data mahasiswa: ")
        print(20*"=")
        print ("Nama, NIM")
        print(20*"=")
        currentnode = self.head
        while currentnode is not None:
            print (currentnode.data),
            print(20*"="),
            print (currentnode.nextnode.data) if hasattr(currentnode.nextnode, "data") else None           
            currentnode = currentnode.nextnode
 
    def mainmenu(self):
        choice = "y"
        while (choice == "y"):
            os.system('cls')
            print('''
            ==========================================
            |          Menu Data Mahasiswa           |
            ==========================================
            | 1. Masukkan data mahasiswa (Nama, NIM) |
            | 2. Hapus data mahasiswa (Nama, NIM)    |
            | 3. Cari data mahasiswa (Nama, NIM)     |
            | 4. Tampilkan banyaknya data            |
            | 5. Tampilkan data mahasiswa (Nama, NIM)|
            ==========================================
            ''')
            pilihan=str(input(("Silakan masukan pilihan anda: ")))
            if(pilihan=="1"):
                os.system('cls')
                add = str(input("Masukan data mahasiswa yang ingin ditambahkan (Nama, NIM): ")).capitalize()
                self.tambahdata(add)
            elif(pilihan=="2"):
                os.system('cls')
                dlt = str(input("Masukan data mahasiswa yang ingin dihapus (Nama, NIM): ")).capitalize()
                self.hapusdata(dlt)
                l.mainmenu()
            elif(pilihan=="3"):
                os.system('cls')
                scr = str(input("Masukan data mahasiswa yang ingin dicari (Nama, NIM): ")).capitalize()
                status = self.caridata(scr)
                if status == True:
                    print("Data ditemukan")
                else:                  
                    print("Data tidak ditemukan")
                l.mainmenu()
            elif(pilihan=="4"):
                os.system('cls')
                print("Banyak data mahasiswa adalah: "+str(self.banyakdata()))
                l.mainmenu()
            elif(pilihan=="5"):
                os.system('cls')
                self.tampildata()
                l.mainmenu()
            else:
                break
 
if __name__ == "__main__":
    l = LinkedList()
    l.mainmenu()